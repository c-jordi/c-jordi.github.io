{"version":3,"file":"worker.js","sources":["../src/Simulation/logic/utils/generateField.js","../src/Simulation/logic/utils/generateInitialFields.js","../src/Simulation/logic/utils/prototypes.js","../src/Simulation/logic/utils/tools.js","../src/Simulation/logic/environment/Environment.js","../src/Simulation/logic/nodes/Nodes.js","../src/Simulation/logic/engine/Euler.js","../src/Simulation/logic/engine/Engine.js","../src/Simulation/logic/analysis/algorithms/BurningTree.js","../src/Simulation/logic/analysis/Connectivity.js","../src/Simulation/logic/analysis/Analysis.js","../src/Simulation/logic/analysis/Database.js","../src/Simulation/logic/animation/Loop.js","../src/Simulation/logic/controller/Controller.js","../src/Simulation/logic/walkers/Walker.js","../src/Simulation/logic/walkers/WalkingSquad.js","../src/Simulation/logic/utils/ratioOfNorms.js","../src/layout.js","../src/Api/properties.js","../src/Api/worker.js"],"sourcesContent":["export default function generateField(size = [100, 100], fill = null) {\n\treturn Array(size[0])\n\t\t.fill(0)\n\t\t.map(el => {\n\t\t\tif (Array.isArray(fill)) {\n\t\t\t\treturn Array(size[1])\n\t\t\t\t\t.fill(0)\n\t\t\t\t\t.map(el => fill.slice());\n\t\t\t}\n\t\t\tif (!isNaN(fill)) {\n\t\t\t\treturn Array(size[1]).fill(fill);\n\t\t\t}\n\n\t\t\treturn Array(size[1]);\n\t\t});\n}\n","import generateField from \"./generateField\";\n\nexport default function generateInitialFields(buffer, size, fill = null) {\n\treturn Array(buffer)\n\t\t.fill(0)\n\t\t.map(el => {\n\t\t\treturn generateField(size, fill);\n\t\t});\n}\n","Array.prototype.indexOfRand = function(value) {\n\tlet indexArray = [];\n\tlet array = this;\n\twhile (array.indexOf(value) > -1) {\n\t\tindexArray.push(array.indexOf(value));\n\t\tarray[array.indexOf(value)] = null;\n\t}\n\tif (indexArray.length)\n\t\treturn indexArray[Math.floor(Math.random() * indexArray.length)];\n\treturn -1;\n};\n","export const copy = (obj) => {\n\treturn JSON.parse(JSON.stringify(obj));\n};\n\nexport const uuid = () => {\n\treturn \"xxxxxxxx\".replace(/[xy]/g, function (c) {\n\t\tvar r = (Math.random() * 16) | 0,\n\t\t\tv = c === \"x\" ? r : (r & 0x3) | 0x8;\n\t\treturn v.toString(16);\n\t});\n};\n","import generateField from \"../utils/generateField\";\nimport generateInitialFields from \"../utils/generateInitialFields\";\nimport displayArray from \"../utils/displayArray\";\nimport \"../utils/prototypes\";\nimport { copy } from \"../utils/tools\";\n\nfunction Environment({\n\talpha = 1,\n\tbeta = 0.2,\n\tk = 0.01,\n\tnodes = {\n\t\tlist: [\n\t\t\t{ name: \"node_1\", state: 1, coord: [15, 1] },\n\t\t\t{ name: \"node_2\", state: -1, coord: [29, 1] },\n\t\t],\n\t},\n\tlayout: { size = [30, 30], lattice = \"square\", position = \"discrete\" },\n\tepsilon = 0.5,\n\ts0 = 25000,\n}) {\n\tthis.size = size;\n\tthis.alpha = alpha;\n\tthis.beta = beta;\n\tthis.k = k;\n\tthis.epsilon = epsilon;\n\tthis.s0 = s0;\n\tthis.framerate = 30;\n\tthis.position = position;\n\tthis.hitBox = 1;\n\n\tthis.freeze = false;\n\n\tthis.lattice = lattice;\n\n\tthis.timeSinceStart = 0;\n\n\tthis.fields = {\n\t\tpositive: generateInitialFields(5, this.size, 0),\n\t\tnegative: generateInitialFields(5, this.size, 0),\n\t};\n\n\tthis.fieldsDt = {\n\t\tpositive: generateInitialFields(5, this.size, 0),\n\t\tnegative: generateInitialFields(5, this.size, 0),\n\t};\n\n\tthis.fieldsDx = {\n\t\tpositive: generateInitialFields(5, this.size, [0, 0]),\n\t\tnegative: generateInitialFields(5, this.size, [0, 0]),\n\t};\n\n\tthis.nodes = nodes;\n\n\tthis.nodesCenter = undefined;\n\n\tthis.nodeColor = {\n\t\tpositive: [246, 255, 51],\n\t\tnegative: [51, 255, 240],\n\t\tdefault: [255, 255, 255],\n\t};\n\n\tthis.allowedSteps = [\n\t\t[-1, 0],\n\t\t[0, 1],\n\t\t[1, 0],\n\t\t[0, -1],\n\t];\n\n\tthis.init();\n}\n\nEnvironment.prototype.getEmission = function (t) {\n\treturn this.s0 * Math.exp((-this.beta * t * 2) / 2);\n};\n\nEnvironment.prototype.setStartingState = function (state) {\n\tif (state == \"rand\") {\n\t\tstate = Math.floor(Math.random() * 2) ? \"positive\" : \"negative\";\n\t}\n\treturn state;\n};\n\nEnvironment.prototype.apply = function (func) {\n\t// Loops over state,x,y\n\t[\"positive\", \"negative\"].forEach((state) => {\n\t\tfor (let x = 0; x < this.size[0]; x++) {\n\t\t\tfor (let y = 0; y < this.size[1]; y++) {\n\t\t\t\tfunc(state, x, y);\n\t\t\t}\n\t\t}\n\t});\n};\n\nEnvironment.prototype.setStartingPosition = function (x, y) {\n\tif (x == \"rand\") {\n\t\tx = Math.random() * this.size[0];\n\t}\n\tif (y == \"rand\") {\n\t\ty = Math.random() * this.size[1];\n\t}\n\tif (this.position === \"continuous\") {\n\t\treturn [x, y];\n\t}\n\treturn this.setPosition(x, y);\n};\n\nEnvironment.prototype.setPosition = function (x, y) {\n\tif (this.lattice == \"square\") {\n\t\treturn [Math.floor(x), Math.floor(y)];\n\t}\n\tif (this.lattice.includes(\"trian\")) {\n\t\tif (x % 2) {\n\t\t\ty = 4 * Math.floor(y / 4) + 2;\n\t\t} else {\n\t\t\ty = 4 * Math.floor(y / 4);\n\t\t}\n\t\treturn [x, y];\n\t}\n};\n\nEnvironment.prototype.assignState = function (walker) {\n\tconst [latx, laty] = this.setPosition(walker.x, walker.y);\n\tthis.nodesCenter.positive.forEach((node) => {\n\t\tif (\n\t\t\tnode[0] - this.hitBox <= latx &&\n\t\t\tnode[0] + this.hitBox >= latx &&\n\t\t\tnode[1] - this.hitBox <= laty &&\n\t\t\tnode[1] + this.hitBox >= laty\n\t\t) {\n\t\t\twalker.state = \"positive\";\n\t\t\twalker.timeSinceCollision = 0;\n\t\t}\n\t});\n\tthis.nodesCenter.negative.forEach((node) => {\n\t\tif (\n\t\t\tnode[0] - this.hitBox <= latx &&\n\t\t\tnode[0] + this.hitBox >= latx &&\n\t\t\tnode[1] - this.hitBox <= laty &&\n\t\t\tnode[1] + this.hitBox >= laty\n\t\t) {\n\t\t\twalker.state = \"negative\";\n\t\t\twalker.timeSinceCollision = 0;\n\t\t}\n\t});\n};\n\nEnvironment.prototype.makeNodesCenter = function () {\n\tthis.nodesCenter = {\n\t\tpositive: this.nodes.list\n\t\t\t.filter((node) => node.state === 1)\n\t\t\t.map((node) => node.coord),\n\t\tnegative: this.nodes.list\n\t\t\t.filter((node) => node.state === -1)\n\t\t\t.map((node) => node.coord),\n\t};\n};\n\nEnvironment.prototype.init = function () {\n\tthis.makeNodesCenter();\n};\n\nEnvironment.prototype.reset = function () {\n\tthis.resetFields();\n\tthis.resetFieldsDt();\n\tthis.resetFieldsDx();\n};\n\nEnvironment.prototype.clearFields = function () {\n\tthis.fields = {\n\t\tpositive: generateInitialFields(5, this.size, 0),\n\t\tnegative: generateInitialFields(5, this.size, 0),\n\t};\n};\n\nEnvironment.prototype.resetFields = function () {\n\tthis.fields = {\n\t\tpositive: [\n\t\t\tthis.fields.positive[0],\n\t\t\t...generateInitialFields(4, this.size, 0),\n\t\t],\n\t\tnegative: [\n\t\t\tthis.fields.negative[0],\n\t\t\t...generateInitialFields(4, this.size, 0),\n\t\t],\n\t};\n};\n\nEnvironment.prototype.resetFieldsDx = function () {\n\tthis.fieldsDx = {\n\t\tpositive: generateInitialFields(5, this.size, [0, 0]),\n\t\tnegative: generateInitialFields(5, this.size, [0, 0]),\n\t};\n};\n\nEnvironment.prototype.resetFieldsDt = function () {\n\tthis.fieldsDt = {\n\t\tpositive: generateInitialFields(5, this.size, 0),\n\t\tnegative: generateInitialFields(5, this.size, 0),\n\t};\n};\n\nEnvironment.prototype.noiseStep = function () {\n\tconst angle = Math.random() * 2 * Math.PI;\n\tconst eps = Math.sqrt(2 * this.epsilon);\n\treturn [eps * Math.cos(angle), eps * Math.sin(angle)];\n};\n\nEnvironment.prototype.discreteStep = function (step) {\n\tif (step == [0, 0]) return [0, 0];\n\tconst scalarProduct = this.allowedSteps.map((mvt) => {\n\t\treturn mvt[0] * step[0] + mvt[1] * step[1];\n\t});\n\n\tconst maxScalarProduct = Math.max(...scalarProduct);\n\tconst stepIndex = scalarProduct.indexOfRand(maxScalarProduct);\n\n\treturn this.allowedSteps[stepIndex];\n};\n\nEnvironment.prototype.clear = function () {\n\tthis.clearFields();\n\tthis.resetFieldsDt();\n\tthis.resetFieldsDx();\n\tthis.makeNodesCenter();\n\tthis.timeSinceStart = 0;\n};\n\nexport default Environment;\n","function Nodes() {\n\tthis.list = [];\n\tthis.addRandom = this.addRandom.bind(this);\n}\n\nNodes.prototype.default = function () {\n\tthis.layoutId = \"Switch\";\n\tthis.add(\"node_1\", 1, [15, 7]);\n\tthis.add(\"node_2\", -1, [15, 22]);\n};\n\nNodes.prototype.toggle = function (node) {\n\tif (this.includes(node.name)) {\n\t\tthis.remove(node.name);\n\t} else {\n\t\tthis.add(node.name, node.state, node.coord);\n\t}\n};\n\nNodes.prototype.includes = function (name) {\n\treturn this.list.map((node) => node.name).includes(name);\n};\n\nNodes.prototype.add = function (name, state, [x, y]) {\n\tthis.list.push({\n\t\tname,\n\t\tstate,\n\t\tcoord: [x, y],\n\t});\n};\n\nNodes.prototype.remove = function (name) {\n\tif (name === undefined) return;\n\tthis.list = this.list.filter((node) => node.name !== name);\n};\n\nNodes.prototype.assign = function (name, props) {\n\tif (name === undefined) return;\n\tthis.list = this.list.map((node) => ({\n\t\t...node,\n\t\t...(node.name === name ? props : {}),\n\t}));\n};\n\nNodes.prototype.addRandom = function (maxX, maxY) {\n\tthis.add(`Node_${this.list.length}`, Math.random() * 2 > 1 ? 1 : -1, [\n\t\tMath.floor(Math.random() * maxX),\n\t\tMath.floor(Math.random() * maxY),\n\t]);\n};\n\nexport default Nodes;\n","import ratioOfNorms from \"../utils/ratioOfNorms\";\n\nfunction Euler(env, walkers) {\n\tthis.env = env;\n\tthis.walkers = walkers;\n\tthis.timeMap = [0];\n}\n\nEuler.prototype.run = function () {\n\tthis.computeFieldsDx(0, 0);\n\tthis.computeFieldsDt(0, 0);\n\tthis.computeWalkersDr(0, 0);\n\tthis.computeEulerFields();\n\tthis.computeEulerWalkers();\n\tthis.env.timeSinceStart++;\n};\n\nEuler.prototype.computeEulerFields = function () {\n\tconst computeEulerField = (state, x, y) => {\n\t\tthis.env.fields[state][0][x][y] =\n\t\t\tthis.env.fields[state][0][x][y] + this.env.fieldsDt[state][0][x][y];\n\t};\n\n\tthis.env.apply(computeEulerField);\n};\n\nEuler.prototype.getPosition = function () {};\n\nEuler.prototype.computeEulerWalkers = function () {\n\tconst computeEulerWalker = (walker) => {\n\t\twalker.timeSinceCollision += 1;\n\t\twalker.x =\n\t\t\t(walker.x + walker.dr[0][0] + this.env.size[0]) % this.env.size[0];\n\t\twalker.y =\n\t\t\t(walker.y + walker.dr[0][1] + this.env.size[1]) % this.env.size[1];\n\n\t\tthis.env.assignState(walker);\n\t};\n\tthis.walkers.apply(computeEulerWalker);\n};\n\nEuler.prototype.computeWalkersDr = function (inputFrame, outputFrame) {\n\tconst computeWalkerDr = (walker) => {\n\t\tconst fieldWalkerStep = (state, x, y) => {\n\t\t\tif (state == 0) return [0, 0];\n\t\t\tconst fieldState = state == \"negative\" ? \"positive\" : \"negative\";\n\t\t\tconst [latx, laty] = this.env.setPosition(x, y);\n\n\t\t\treturn this.env.fieldsDx[fieldState][inputFrame][latx][laty].map(\n\t\t\t\t(el) => el * this.env.alpha\n\t\t\t);\n\t\t};\n\n\t\tconst [state, x, y] = [walker.state, walker.x, walker.y];\n\t\tconst fieldStep = fieldWalkerStep(state, x, y);\n\t\tconst noiseStep = this.env.noiseStep();\n\n\t\tif (this.env.position == \"discrete\") {\n\t\t\tconst discreteStep = this.env.discreteStep([\n\t\t\t\tfieldStep[0] + noiseStep[0],\n\t\t\t\tfieldStep[1] + noiseStep[1],\n\t\t\t]);\n\n\t\t\twalker.dr[outputFrame] = discreteStep;\n\t\t} else {\n\t\t\twalker.dr[outputFrame] = [\n\t\t\t\tfieldStep[0] + noiseStep[0],\n\t\t\t\tfieldStep[1] + noiseStep[1],\n\t\t\t];\n\t\t}\n\n\t\tconst fieldNoiseRatio = ratioOfNorms(fieldStep, noiseStep);\n\t\tif (fieldNoiseRatio < 1) {\n\t\t\twalker.pathColor = [255, 255, 255];\n\t\t} else if (fieldNoiseRatio > 1 && fieldNoiseRatio < 2) {\n\t\t\twalker.pathColor = [\n\t\t\t\t255,\n\t\t\t\t...[255, 255].map((el) => el * (2 - fieldNoiseRatio)),\n\t\t\t];\n\t\t} else {\n\t\t\twalker.pathColor = [255, 0, 0];\n\t\t}\n\t};\n\n\tthis.walkers.apply(computeWalkerDr);\n};\n\nEuler.prototype.computeFieldsDt = function (inputFrame, outputFrame) {\n\tthis.addResidues(inputFrame, outputFrame);\n\tthis.addEmissions(inputFrame, outputFrame);\n};\n\nEuler.prototype.addResidues = function (inputFrame, outputFrame) {\n\tconst addResidue = (state, x, y) => {\n\t\tthis.env.fieldsDt[state][outputFrame][x][y] =\n\t\t\t-this.env.k * this.env.fields[state][inputFrame][x][y];\n\t};\n\n\tthis.env.apply(addResidue);\n};\n\nEuler.prototype.addEmissions = function (inputFrame, outputFrame) {\n\tconst addEmission = (walker) => {\n\t\tconst [state, x, y, timeSinceCollision] = [\n\t\t\twalker.state,\n\t\t\twalker.x,\n\t\t\twalker.y,\n\t\t\twalker.timeSinceCollision,\n\t\t];\n\t\tconst [latx, laty] = this.env.setPosition(x, y);\n\n\t\tif (state != \"positive\" && state != \"negative\") return;\n\n\t\tconst newTime = timeSinceCollision + this.timeMap[inputFrame];\n\t\tthis.env.fieldsDt[state][outputFrame][latx][laty] += this.env.getEmission(\n\t\t\tnewTime * 2\n\t\t);\n\t};\n\tthis.walkers.apply(addEmission);\n};\n\nEuler.prototype.computeFieldsDx = function (inputFrame, outputFrame) {\n\tconst computePointDx = (state, x, y) => {\n\t\tconst x_minus = (x - 1 + this.env.size[0]) % this.env.size[0];\n\t\tconst x_plus = (x + 1 + this.env.size[0]) % this.env.size[0];\n\t\tif (!this.env.fields[state][inputFrame][x_plus][y]) {\n\t\t\tthis.env.fields[state][inputFrame][x_plus][y] = 0;\n\t\t}\n\t\tif (!this.env.fields[state][inputFrame][x_minus][y]) {\n\t\t\tthis.env.fields[state][inputFrame][x_minus][y] = 0;\n\t\t}\n\t\tthis.env.fieldsDx[state][outputFrame][x][y][0] =\n\t\t\t(this.env.fields[state][inputFrame][x_plus][y] -\n\t\t\t\tthis.env.fields[state][inputFrame][x_minus][y]) /\n\t\t\t2;\n\n\t\t// Y derivative\n\t\tconst y_minus = (y - 1 + this.env.size[1]) % this.env.size[1];\n\t\tconst y_plus = (y + 1 + this.env.size[1]) % this.env.size[1];\n\t\tif (!this.env.fields[state][inputFrame][x][y_plus]) {\n\t\t\tthis.env.fields[state][inputFrame][x][y_plus] = 0;\n\t\t}\n\t\tif (!this.env.fields[state][inputFrame][x][y_minus]) {\n\t\t\tthis.env.fields[state][inputFrame][x][y_minus] = 0;\n\t\t}\n\t\tthis.env.fieldsDx[state][outputFrame][x][y][1] =\n\t\t\t(this.env.fields[state][inputFrame][x][y_plus] -\n\t\t\t\tthis.env.fields[state][inputFrame][x][y_minus]) /\n\t\t\t2;\n\t};\n\n\tthis.env.apply(computePointDx);\n};\n\nexport default Euler;\n","import Euler from \"./Euler\";\n\nfunction Engine(env, walkers, engine = \"euler\", database, analysis) {\n\tthis.running = false;\n\tthis.env = env;\n\tthis.walkers = walkers;\n\tthis.engine = engine.toLowerCase();\n\tthis.database = database;\n\tthis.analysis = analysis;\n\tthis.setup();\n\tthis.counter = 0;\n}\n\nEngine.prototype.restart = function () {\n\tthis.env.clear();\n\tthis.walkers.reset();\n\tthis.counter = 0;\n};\n\nEngine.prototype.setup = function () {\n\tswitch (this.engine) {\n\t\tcase \"euler\":\n\t\t\tthis.engine = new Euler(this.env, this.walkers);\n\t\t\tbreak;\n\t\t// case \"rk\":\n\t\t// case \"rungekutta\":\n\t\t// this.engine = RungeKutta;\n\t\tdefault:\n\t\t\tconsole.log(\"No engine was selected...\");\n\t}\n};\n\nEngine.prototype.next = function () {\n\tif (!this.running) return;\n\tthis.env.init();\n\tthis.counter++;\n\tthis.engine.run();\n\tthis.saveMetrics();\n\tthis.env.reset();\n\tthis.walkers.resetDr();\n};\n\nEngine.prototype.toggle = function () {\n\tthis.running = !this.running;\n};\n\nEngine.prototype.stop = function () {\n\tthis.running = false;\n};\n\nEngine.prototype.saveMetrics = function () {\n\tconst saveStepSize = (walker) => {\n\t\tconst stepSize = Math.sqrt(walker.dr[0][0] ** 2 + walker.dr[0][1] ** 2);\n\t\tthis.database.save(\"stepSize\", stepSize);\n\t};\n\t// this.walkers.apply(saveStepSize);\n};\n\nexport default Engine;\n","import { copy } from \"../../utils/tools\";\nimport generateField from \"../../utils/generateField\";\n\nfunction BurningTree(matrix, campfires) {\n\tthis.rows = matrix.length;\n\tthis.cols = matrix[0].length;\n\tthis.forest = matrix;\n\tthis.campfires = campfires;\n\tthis.maxPathLength = 50;\n\tthis.A = null;\n\tthis.edges = [];\n\n\treturn this.connect();\n}\n\nBurningTree.prototype.connect = function () {\n\tthis.A = this.campfires.map((campfire) => this.burnForest(campfire));\n\treturn this.A;\n};\n\nBurningTree.prototype.burnForest = function (campfire) {\n\t// Returns adjacency matrix\n\tconst { name, state, coord } = campfire;\n\n\tlet forest = copy(this.forest);\n\n\tlet stack = [[...coord, -1]];\n\n\twhile (stack.length && stack[0][2] < this.maxPathLength) {\n\t\tthis.explore(forest, stack);\n\t}\n\n\treturn this.campfires.map((camp) => {\n\t\tconst [xtar, ytar] = camp.coord;\n\t\tconst filtered = this.getNeighbors(xtar, ytar, 1).filter(([x, y]) => {\n\t\t\treturn forest[x][y] > 1 && camp.name != campfire.name;\n\t\t});\n\n\t\treturn filtered.length ? 1 : 0;\n\t});\n};\n\nBurningTree.prototype.explore = function (forest, stack) {\n\tconst [x, y, step] = stack.shift();\n\n\tif (forest[x][y] == 0) {\n\t\tif (step !== -1) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tforest[x][y] = step;\n\n\tif (this.checkCampfire([x, y])) {\n\t\tif (step !== -1 && step !== 2) {\n\t\t\treturn;\n\t\t}\n\t}\n\n\tif (step == -1) {\n\t\tconst neighbors = this.getNeighbors(x, y, 1);\n\t\tneighbors.forEach((neighbor) => {\n\t\t\tconst [x, y] = neighbor;\n\t\t\tif (forest[x][y] == 1) {\n\t\t\t\tstack.push([x, y, 2]);\n\t\t\t}\n\t\t});\n\t} else {\n\t\tconst neighbors = this.getNeighbors(x, y);\n\t\tneighbors.forEach((neighbor) => {\n\t\t\tconst [x, y] = neighbor;\n\t\t\tif (forest[x][y] == 1) {\n\t\t\t\tstack.push([x, y, step + 1]);\n\t\t\t}\n\t\t});\n\t}\n};\n\nBurningTree.prototype.checkCampfire = function (coord) {\n\treturn this.campfires.filter((campfire) => {\n\t\tthis.getNeighbors(campfire.coord, 1).filter((neighbor) => {\n\t\t\treturn neighbor[0] == coord[0] && neighbor[1] == coord[1];\n\t\t});\n\t\tconst condition =\n\t\t\tcampfire.coord[0] - 1 <= coord[0] &&\n\t\t\tcoord[0] <= campfire.coord[0] + 1 &&\n\t\t\tcampfire.coord[1] - 1 <= coord[1] &&\n\t\t\tcampfire.coord[1] + 1 >= coord[1];\n\t\treturn condition;\n\t}).length;\n};\n\nBurningTree.prototype.getNeighbors = function (x, y, diag = 0) {\n\t// diag : 1 , returns diag\n\n\tconst up = (y - 1 + this.cols) % this.cols;\n\tconst left = (x - 1 + this.rows) % this.rows;\n\tconst right = (x + 1 + this.rows) % this.rows;\n\tconst down = (y + 1 + this.cols) % this.cols;\n\n\tconst diags = [\n\t\t[left, up],\n\t\t[left, down],\n\t\t[right, up],\n\t\t[right, down],\n\t];\n\n\tif (diag) return [[x, down], [x, up], [left, y], [right, y], ...diags];\n\treturn [\n\t\t[x, down],\n\t\t[x, up],\n\t\t[left, y],\n\t\t[right, y],\n\t];\n};\n\nfunction download(filename, text) {\n\tvar element = document.createElement(\"a\");\n\telement.setAttribute(\n\t\t\"href\",\n\t\t\"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n\t);\n\telement.setAttribute(\"download\", filename);\n\telement.style.display = \"none\";\n\tdocument.body.appendChild(element);\n\telement.click();\n\tdocument.body.removeChild(element);\n}\n\nexport default BurningTree;\n","import generateField from \"../utils/generateField\";\nimport HoshenKopelman from \"./algorithms/HoshenKopelman\";\nimport BurningTree from \"./algorithms/BurningTree\";\n\nfunction Connectivity(env, nodes, database) {\n\tthis.nodes = nodes;\n\tthis.env = env;\n\tthis.connectivityThreshold = env.s0 * 2;\n\tthis.database = database;\n\tthis.adjencyMatrix = null;\n\tthis.hoshenKopelman = null;\n\tthis.reset();\n}\n\nConnectivity.prototype.filterUsingThreshold = function (combinedField) {\n\tfor (let i = 0; i < this.env.size[0]; i++) {\n\t\tfor (let j = 0; j < this.env.size[1]; j++) {\n\t\t\tthis.filteredField[i][j] =\n\t\t\t\tcombinedField[i][j] > this.connectivityThreshold ? 1 : 0;\n\t\t}\n\t}\n};\n\nConnectivity.prototype.reset = function () {\n\tthis.filteredField = generateField(this.env.size, 0);\n};\n\nConnectivity.prototype.run = function (combinedField, { time, version }) {\n\tthis.reset();\n\t// printM(combinedField);\n\tthis.filterUsingThreshold(combinedField);\n\t// this.hoshenKopelman = HoshenKopelman(this.filteredField);\n\n\tconst burningTree = new BurningTree(this.filteredField, this.nodes.list);\n\n\tconst nbrEdges = burningTree\n\t\t.map((row) => row.reduce((a, b) => a + b, 0))\n\t\t.reduce((a, b) => a + b, 0);\n\n\tthis.database.push(\"connectivity\", {\n\t\ttime,\n\t\tA: burningTree,\n\t\tversion,\n\t\tE: nbrEdges / 2,\n\t});\n\n\treturn { time, y: nbrEdges / 2 };\n};\n\nfunction printM(matrix) {\n\tlet count = 0;\n\tconsole.log(\"- - - -  - - - \");\n\tmatrix.forEach((row) => {\n\t\tcount++;\n\t\tconsole.log(\n\t\t\t...row.slice(10, 20).map((el) => Math.round(el)),\n\t\t\t\"/    \",\n\t\t\tcount\n\t\t);\n\t});\n\tconsole.log(\"- - - -  - - - \");\n}\n\nexport default Connectivity;\n","import generateField from \"../utils/generateField\";\nimport Connectivity from \"./Connectivity\";\nimport { uuid } from \"../utils/tools\";\n\nfunction Analysis(env, walkers, nodes, database, events = []) {\n\tthis.env = env;\n\tthis.walkers = walkers;\n\tthis.database = database;\n\tthis.nodes = nodes;\n\tthis.version = uuid();\n\tthis.sessions = [this.version];\n\tthis.combinedField = generateField(this.env.size, 0);\n\tthis.maxima = {\n\t\tmax: 1,\n\t\tmin: 0,\n\t};\n\tthis.maxMinThreshold = 1000;\n\tthis.interval = 10;\n\tthis.events = [];\n\n\tthis.displayOptions = {\n\t\tshowWalkers: false,\n\t\tshowNodes: true,\n\t\tshowCombinedFields: true,\n\t\tshowPositiveField: false,\n\t\tshowNegativeField: false,\n\t\tdefaultColor: \"#ffffff\",\n\t\tpositiveColor: \"#f6ff33\",\n\t\tnegativeColor: \"#33fff0\",\n\t\tcombinedColor: \"#6a0dad\",\n\t};\n\n\t// this.plot = new Plot(document.getElementById(\"canvas-plot\"), {\n\t// \tname: \"plot\"\n\t// });\n\n\tthis.fineGrain = 1;\n\n\tthis.connectivity = new Connectivity(env, nodes, database);\n}\n\nAnalysis.prototype.combineFields = function () {\n\tlet combinedField = generateField(this.env.size, 0);\n\tfor (var i = 0; i < this.env.size[0]; i++) {\n\t\tfor (let j = 0; j < this.env.size[1]; j++) {\n\t\t\tcombinedField[i][j] =\n\t\t\t\tthis.env.fields.positive[0][i][j] + this.env.fields.negative[0][i][j];\n\t\t}\n\t}\n\n\tthis.combinedField = combinedField;\n};\n\nAnalysis.prototype.computeMaxima = function () {\n\tthis.maxima.min = Math.min(...this.combinedField.flat());\n\tthis.maxima.max = Math.max(...this.combinedField.flat());\n\tthis.maxima.max =\n\t\tthis.maxima.max < this.maxMinThreshold\n\t\t\t? this.maxMinThreshold\n\t\t\t: this.maxima.max;\n};\nAnalysis.prototype.run = function () {\n\tthis.combineFields();\n\tthis.computeMaxima();\n\tthis.checkEvents();\n};\n\nAnalysis.prototype.checkEvents = function () {\n\tif (this.env.timeSinceStart % this.interval === 0) {\n\t\tthis.edge();\n\t}\n\tthis.events.forEach((event) => {\n\t\tif (this.env.timeSinceStart === event.t) {\n\t\t\tthis.applyEvent(event);\n\t\t}\n\t});\n};\n\nAnalysis.prototype.applyEvent = function (event) {\n\tswitch (event.type) {\n\t\tcase \"node\":\n\t\t\tthis.nodes.toggle(event);\n\t\t\tbreak;\n\t\tcase \"parameter\":\n\t\t\tthis.env[event.name] = +event.value;\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tbreak;\n\t}\n};\n\nAnalysis.prototype.edge = function () {\n\tthis.connectivity.run(this.combinedField, {\n\t\ttime: this.env.timeSinceStart,\n\t\tversion: this.version,\n\t});\n};\n\nAnalysis.prototype.clear = function () {\n\tthis.version = uuid();\n\tthis.sessions.push(this.version);\n\tthis.combinedField = generateField(this.env.size, 0);\n};\n\nexport default Analysis;\n","function Database(name, callback) {\n\tthis.name = name;\n\tthis.callback = callback || function () {};\n}\n\nDatabase.prototype.push = function (name, value) {\n\t// adds the value the end of the array of name\n\tif (this[name] === undefined) {\n\t\tthis[name] = [];\n\t}\n\tthis.callback({ name, value });\n\tthis[name].push(value);\n};\n\nDatabase.prototype.save = function (name, value) {\n\tif (this[\"_\" + name] === undefined) {\n\t\tthis[\"_\" + name] = {};\n\t}\n\tconst round = Math.round(value);\n\tif (round in this[\"_\" + name]) {\n\t\tthis[\"_\" + name][round]++;\n\t} else {\n\t\tthis[\"_\" + name][round] = 1;\n\t}\n};\n\nexport default Database;\n","function Loop(id, callback, defaultCallback, setId) {\n\tthis.minInt = 0; //30fps\n\tthis.maxFrames = 10000;\n\tthis.id = id;\n\tthis.frame = -1;\n\tthis.callback = callback;\n\tthis.defaultCallback = defaultCallback;\n\tthis.start = this.start.bind(this);\n\tthis.step = this.step.bind(this);\n\tthis.request = (func) => {\n\t\tsetId(window.requestAnimationFrame(func));\n\t};\n}\n\nLoop.prototype.start = function () {\n\tthis.startTime = performance.now();\n\tthis.request(this.step);\n};\n\nLoop.prototype.step = function () {\n\t// if (this.frame >= this.maxFrames - 1) return;\n\tif (performance.now() - this.startTime > this.minInt) {\n\t\tthis.frame++;\n\t\tthis.callback({ id: this.id, frame: this.frame });\n\t\tthis.startTime = performance.now();\n\t} else {\n\t\tthis.defaultCallback();\n\t}\n\tthis.request(this.step);\n};\n\nLoop.prototype.slowMo = function (state) {\n\tthis.minInt = state ? 400 : 0;\n};\n\nexport default Loop;\n","import Loop from \"../animation/Loop\";\n\nfunction Controller({ walkers, analysis, engine, env, nodes, worker = false }) {\n\tthis.walkers = walkers;\n\tthis.analysis = analysis;\n\tthis.engine = engine;\n\tthis.nodes = nodes;\n\tthis.env = env;\n\tthis.loop = undefined;\n\tthis.loopCallback = undefined;\n\tthis.slowMo = false;\n\tthis.worker = worker;\n\n\t// Keeps track of updates\n\tthis.updates = {\n\t\tui: 0,\n\t\tgame: 0,\n\t\tback: 0,\n\t};\n\tthis.setRequestId = this.setRequestId.bind(this);\n\tthis.useCallback = this.useCallback.bind(this);\n\tthis.useRedraw = this.useRedraw.bind(this);\n\tthis.toggleEngine = this.toggleEngine.bind(this);\n\tthis.setContrast = this.setContrast.bind(this);\n\tthis.setParams = this.setParams.bind(this);\n\tthis.setLayout = this.setLayout.bind(this);\n}\n\n///////////////////////////////////////////////////////////////\n//  INTERFACE SETTINGS GETTERS AND SETTERS   \t\t\t  /////\n///////////////////////////////////////////////////////////////\n\n/**\n * Gets the variables of the environment\n */\nController.prototype.getEnv = function (obj) {\n\tconst { size, alpha, beta, k, epsilon, s0 } = this.env;\n\tconst { numberOfAgents } = this.walkers;\n\treturn JSON.parse(\n\t\tJSON.stringify({ size, numberOfAgents, alpha, beta, k, epsilon, s0 })\n\t);\n};\n\n/**\n * Sets the variables of the environment\n */\n\nController.prototype.setEnv = function (\n\t{ size, numberOfAgents, alpha, beta, k, epsilon, s0 },\n\trestart\n) {\n\tthis.env.alpha = +alpha;\n\tthis.env.beta = +beta;\n\tthis.env.k = +k;\n\tthis.env.epsilon = +epsilon;\n\tthis.env.s0 = +s0;\n\tthis.walkers.setPopulation(+numberOfAgents);\n\tif (restart) {\n\t\tthis.env.size = size;\n\t\tthis.engine.restart();\n\t}\n};\n\n/**\n * Gets the variables of the layers\n */\nController.prototype.getLayers = function () {\n\tconst {\n\t\tshowWalkers,\n\t\tshowNodes,\n\t\tshowCombinedFields,\n\t\tshowPositiveField,\n\t\tshowNegativeField,\n\t\tpositiveColor,\n\t\tnegativeColor,\n\t\tdefaultColor,\n\t\tcombinedColor,\n\t} = this.analysis.displayOptions;\n\n\treturn {\n\t\tshowWalkers,\n\t\tshowNodes,\n\t\tshowCombinedFields,\n\t\tshowPositiveField,\n\t\tshowNegativeField,\n\t\tpositiveColor,\n\t\tnegativeColor,\n\t\tdefaultColor,\n\t\tcombinedColor,\n\t\tslowMo: copy(this.slowMo),\n\t};\n};\n\n/**\n * Sets the variables of the layers\n */\nController.prototype.setLayers = function (name, value) {\n\tswitch (name) {\n\t\tcase \"slowMo\":\n\t\t\tthis.useSlowMo(value);\n\t\t\tbreak;\n\t\tdefault:\n\t\t\tthis.analysis.displayOptions[name] = value;\n\t\t\treturn;\n\t}\n};\n\n/**\n * Sets the contrast of the layers\n */\nController.prototype.setContrast = function (contrast) {\n\tthis.analysis.fineGrain = contrast;\n};\n\n/**\n * Sets the events for the analysis\n */\n\n/**\n * Sets the variables for the layout\n */\nController.prototype.setLayout = function (\n\tnodes,\n\tsize,\n\tparams = [],\n\tevents = [],\n\tkey\n) {\n\tthis.nodes.list = nodes;\n\tthis.nodes.layoutId = key;\n\tthis.env.makeNodesCenter();\n\tthis.setParams(params);\n\tthis.setEvents(events);\n\tif (this.env.size[0] !== size[0] || this.env.size[1] !== size[1]) {\n\t\tthis.env.size = size;\n\t\tthis.engine.restart();\n\t\tthis.analysis.clear();\n\t}\n\tthis.useRedraw();\n};\n\nController.prototype.setDefaultParams = function () {\n\tif (this.worker) {\n\t\treturn;\n\t}\n\tthis.useSlowMo(false);\n\tthis.analysis.displayOptions[\"showWalkers\"] = false;\n};\n\n/**\n * Sets the params for the layout\n */\nController.prototype.setParams = function (params) {\n\tthis.setDefaultParams();\n\tif (!Array.isArray(params)) {\n\t\treturn;\n\t}\n\tparams.forEach((param) => {\n\t\tswitch (param.name) {\n\t\t\tcase \"numberOfAgents\":\n\t\t\t\tthis.walkers.setPopulation(+param.value);\n\t\t\t\tbreak;\n\t\t\tcase \"showWalkers\":\n\t\t\tcase \"showCombinedField\":\n\t\t\tcase \"showPositiveField\":\n\t\t\tcase \"showNegativeField\":\n\t\t\t\tthis.analysis.displayOptions[param.name] = param.value;\n\t\t\t\tbreak;\n\t\t\tcase \"slowMo\":\n\t\t\t\tthis.useSlowMo(+param.value);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t}\n\t});\n};\n\n/**\n * Sets the events\n */\n\nController.prototype.setEvents = function (events) {\n\tthis.analysis.events = events;\n};\n\n///////////////////////////////////////////////////////////////\n//  STAGE LOOP CONTROLLER\t\t \t\t\t\t          /////\n///////////////////////////////////////////////////////////////\n\n/**\n * Sets the id of the frame that is requested for animation\n * @param  {Number} id Identifier of the frame\n */\nController.prototype.setRequestId = function (id) {\n\tthis.reqId = id;\n};\n\n/**\n * Use the loop callback\n */\nController.prototype.useCallback = function (data) {\n\tthis.loopCallback(data);\n};\n/**\n * Use the redraw callback\n */\nController.prototype.useRedraw = function () {\n\tif (this.redraw) {\n\t\tthis.redraw();\n\t}\n};\n/**\n * Sets the id of the frame that is requested for animation\n * @param  {Number} id Identifier of the frame\n */\nController.prototype.setRequestId = function (id) {\n\tthis.reqId = id;\n};\n\n/**\n * Sets up the loop in the controller\n * @param  {String} id Identifier of the loop\n * @param  {Function} callback Function that is executed at every frame\n */\nController.prototype.setupLoop = function (id, callback) {\n\tthis.loopCallback = callback;\n\tif (this.loop instanceof Loop) return;\n\tthis.loop = new Loop(id, this.useCallback, this.useRedraw, this.setRequestId);\n};\n\n/**\n * Sets up the loop in the controller\n * @param  {Function} redraw Redraw the native stage\n */\nController.prototype.setupRedraw = function (callback) {\n\tthis.redraw = callback;\n};\n\n/**\n * Stops the loop\n */\nController.prototype.stopLoop = function () {\n\tif (this.loop instanceof Loop) {\n\t\twindow.cancelAnimationFrame(this.reqId);\n\t\tthis.reqId = undefined;\n\t}\n};\n\n/**\n * Starts the loop\n */\nController.prototype.startLoop = function () {\n\tif (this.loop instanceof Loop && this.reqId === undefined) {\n\t\tthis.loop.start();\n\t}\n};\n\nController.prototype.useSlowMo = function (state = undefined) {\n\tif (state === undefined) {\n\t\tthis.slowMo = !this.slowMo;\n\t} else {\n\t\tthis.slowMo = state;\n\t}\n\tthis.stopLoop();\n\tthis.loop.slowMo(this.slowMo);\n\tthis.startLoop();\n};\n\n///////////////////////////////////////////////////////////////\n//  SIMULATION CONTROLLER \t\t\t \t\t\t\t      /////\n///////////////////////////////////////////////////////////////\n\n/**\n * Starts and stops the simulation engine\n */\nController.prototype.toggleEngine = function (state) {\n\tif (state === undefined) {\n\t\tthis.engine.running = !this.engine.running;\n\t} else {\n\t\tthis.engine.running = state;\n\t}\n};\n\n/**\n * Sets the population number\n * @param  {Number} population The first number\n */\nController.prototype.setPopulation = function (population) {\n\tthis.walkers.setPopulation(population);\n};\n\nexport default Controller;\n\nfunction copy(val) {\n\treturn JSON.parse(JSON.stringify(val));\n}\n","function Walker(name, x, y, state) {\n\tthis.name = name;\n\tthis.state = state; // string [\"positive\",\"negative\"]\n\tthis.timeSinceCollision = 0;\n\tthis.x = x;\n\tthis.y = y;\n\tthis.dr = Array(4).fill(null);\n\tthis.pathColor = [255, 255, 255];\n}\n\nexport default Walker;\n","import Walker from \"./Walker\";\n\nfunction WalkingSquad(numberOfAgents, environment, x, y, state) {\n\tthis.numberOfAgents = numberOfAgents;\n\tthis.state = state;\n\tthis.env = environment;\n\tthis.x = x;\n\tthis.y = y;\n\tthis.squad = [];\n\tthis.createSquad();\n}\n\nWalkingSquad.prototype.createSquad = function() {\n\tfor (let i = 0; i < this.numberOfAgents; i++) {\n\t\tthis.squad.push(this.createWalker(`Walker_${i}`));\n\t}\n};\n\nWalkingSquad.prototype.createWalker = function(name) {\n\tconst [newX, newY] = this.env.setStartingPosition(this.x, this.y);\n\tconst newState = this.env.setStartingState(this.state);\n\n\treturn new Walker(name, newX, newY, newState);\n};\n\nWalkingSquad.prototype.removeWalker = function(count = 1) {\n\tif (count === 0) return;\n\tif (this.squad.length) {\n\t\tconst number = this.squad.length < count ? this.squad.length : count;\n\t\tthis.squad = this.squad.slice(0, -number);\n\t}\n\tthis.numberOfAgents = this.squad.length;\n};\n\nWalkingSquad.prototype.addWalker = function(count = 1) {\n\tfor (let i = 0; i < count; i++) {\n\t\tthis.squad.push(this.createWalker(`Walker_${this.squad.length + i}`));\n\t}\n\tthis.numberOfAgents = this.squad.length;\n};\n\nWalkingSquad.prototype.setPopulation = function(population) {\n\tif (!Number.isInteger(population)) return;\n\tconst popDiff = population - this.numberOfAgents;\n\tpopDiff > 0 ? this.addWalker(popDiff) : this.removeWalker(-popDiff);\n};\n\nWalkingSquad.prototype.resetPath = function() {\n\tfor (let i = 0; i < this.numberOfAgents; i++) {\n\t\tthis.squad[i].xpath = [this.squad[i].x, ...Array(4).fill(0)];\n\t\tthis.squad[i].ypath = [this.squad[i].y, ...Array(4).fill(0)];\n\t}\n};\n\nWalkingSquad.prototype.apply = function(func) {\n\t// Applies on each walker\n\tfor (let i = 0; i < this.numberOfAgents; i++) {\n\t\tfunc(this.squad[i]);\n\t}\n};\n\nWalkingSquad.prototype.resetDr = function() {\n\tfor (let i = 0; i < this.numberOfAgents; i++) {\n\t\tthis.squad[i].dr = Array(4).fill(null);\n\t}\n};\nWalkingSquad.prototype.reset = function() {\n\tthis.squad = [];\n\tthis.createSquad();\n};\n\nexport default WalkingSquad;\n","const ratioOfNorms = (arr1, arr2) => {\n\tconst normArr1 = Math.sqrt(arr1[0] ** 2 + arr1[1] ** 2);\n\tconst normArr2 = Math.sqrt(arr2[0] ** 2 + arr2[1] ** 2);\n\treturn normArr1 / normArr2;\n};\nexport default ratioOfNorms;\n","const layouts = [\n\t{\n\t\ttitle: \"Hello World\",\n\t\tsize: [10, 10],\n\t\tparams: [\n\t\t\t{ name: \"numberOfAgents\", value: 2 },\n\t\t\t{ name: \"slowMo\", value: true },\n\t\t\t{ name: \"showCombinedFields\", value: false },\n\t\t\t{ name: \"showPositiveField\", value: true },\n\t\t\t{ name: \"showNegativeField\", value: true },\n\t\t\t{ name: \"showWalkers\", value: true },\n\t\t],\n\t\tnodes: [\n\t\t\t{ name: \"node_1\", state: 1, coord: [2, 2] },\n\t\t\t{ name: \"node_2\", state: -1, coord: [2, 7] },\n\t\t\t{ name: \"node_3\", state: -1, coord: [7, 2] },\n\t\t\t{ name: \"node_4\", state: 1, coord: [7, 7] },\n\t\t],\n\t\tname: \"helloworld\",\n\t\tgroup: 1,\n\t},\n\t{\n\t\ttitle: \"Empty\",\n\t\tnodes: [],\n\t\tsize: [30, 30],\n\t\tparams: [],\n\t\tname: \"Empty30\",\n\t\tgroup: 1,\n\t},\n\t{\n\t\ttitle: \"Switch\",\n\t\tnodes: [\n\t\t\t{ name: \"node_1\", state: 1, coord: [15, 7] },\n\t\t\t{ name: \"node_2\", state: -1, coord: [15, 22] },\n\t\t],\n\t\tsize: [30, 30],\n\t\tparams: [{ name: \"numberOfAgents\", value: 450 }],\n\t\tname: \"Switch\",\n\t\tgroup: 1,\n\t},\n\t{\n\t\ttitle: \"ON/OFF Switch\",\n\t\tnodes: [\n\t\t\t{ name: \"node_1\", state: 1, coord: [15, 7] },\n\t\t\t{ name: \"node_2\", state: -1, coord: [15, 22] },\n\t\t],\n\t\tsize: [30, 30],\n\t\tevents: [\n\t\t\t{ type: \"parameter\", name: \"beta\", t: 1, value: 0.3 },\n\t\t\t{ type: \"parameter\", name: \"beta\", t: 1500, value: 1 },\n\t\t\t{ type: \"parameter\", name: \"beta\", t: 2500, value: 0.3 },\n\t\t],\n\t\tparams: [{ name: \"numberOfAgents\", value: 450 }],\n\t\tname: \"ON/OFFSwitch\",\n\t\tgroup: 1,\n\t},\n\t{\n\t\ttitle: \"Star\",\n\t\tnodes: [\n\t\t\t{ name: \"node_1\", state: 1, coord: [15, 15] },\n\t\t\t{ name: \"node_2\", state: -1, coord: [10, 15] },\n\t\t\t{ name: \"node_3\", state: -1, coord: [15, 10] },\n\t\t\t{ name: \"node_4\", state: -1, coord: [20, 15] },\n\t\t\t{ name: \"node_5\", state: -1, coord: [15, 20] },\n\t\t],\n\t\tsize: [30, 30],\n\t\tname: \"Star\",\n\t\tparams: [{ name: \"numberOfAgents\", value: 450 }],\n\t\tgroup: 1,\n\t},\n\t{\n\t\ttitle: \"Grid\",\n\t\tnodes: [0, 1, 2, 3, 4]\n\t\t\t.map((col) => {\n\t\t\t\treturn [0, 1, 2, 3, 4].map((row) => {\n\t\t\t\t\treturn [col * 20, row * 20];\n\t\t\t\t});\n\t\t\t})\n\t\t\t.flat()\n\t\t\t.map((coord, i) => {\n\t\t\t\treturn [\n\t\t\t\t\t{ name: \"node_p\" + i, state: 1, coord },\n\t\t\t\t\t{\n\t\t\t\t\t\tname: \"node_n\" + i,\n\t\t\t\t\t\tstate: -1,\n\t\t\t\t\t\tcoord: [coord[0] + 10, coord[1] + 10],\n\t\t\t\t\t},\n\t\t\t\t];\n\t\t\t})\n\t\t\t.flat(),\n\t\tsize: [100, 100],\n\t\tparams: [{ name: \"numberOfAgents\", value: 450 }],\n\t\tname: \"Grid100\",\n\t\tgroup: 3,\n\t},\n\t{\n\t\ttitle: \"Empty\",\n\t\tnodes: [],\n\t\tsize: [90, 70],\n\t\tparams: [],\n\t\tname: \"Empty90x70\",\n\t\tgroup: 2,\n\t},\n\t{\n\t\ttitle: \"NAND GATE\",\n\t\tnodes: [\n\t\t\t{ name: \"node_1\", state: 1, coord: [28, 6] },\n\t\t\t{ name: \"node_2\", state: -1, coord: [30, 20] },\n\t\t\t{ name: \"node_3\", state: 1, coord: [45, 20] },\n\t\t\t{ name: \"node_4\", state: -1, coord: [60, 20] },\n\t\t\t{ name: \"node_5\", state: -1, coord: [10, 20] },\n\t\t\t{ name: \"node_6\", state: 1, coord: [20, 35] },\n\t\t\t{ name: \"node_8\", state: -1, coord: [20, 50] },\n\t\t\t{ name: \"node_9\", state: 1, coord: [10, 60] },\n\t\t\t{ name: \"node_10\", state: 1, coord: [35, 50] },\n\t\t\t{ name: \"node_11\", state: -1, coord: [50, 50] },\n\t\t\t{ name: \"node_12\", state: 1, coord: [65, 50] },\n\t\t\t{ name: \"node_13\", state: -1, coord: [37, 63] },\n\t\t\t{ name: \"node_14\", state: 1, coord: [50, 40] },\n\t\t\t{ name: \"node_15\", state: -1, coord: [65, 65] },\n\t\t],\n\t\tsize: [90, 70],\n\t\tparams: [{ name: \"numberOfAgents\", value: 3250 }],\n\t\tname: \"NAND\",\n\t\tgroup: 2,\n\t},\n\t{\n\t\ttitle: \"NOT GATE\",\n\t\tnodes: [\n\t\t\t{ name: \"node_1\", state: 1, coord: [28, 6] },\n\t\t\t{ name: \"node_2\", state: -1, coord: [30, 20] },\n\t\t\t{ name: \"node_3\", state: 1, coord: [45, 20] },\n\t\t\t{ name: \"node_4\", state: -1, coord: [60, 20] },\n\t\t\t{ name: \"node_5\", state: -1, coord: [10, 20] },\n\t\t\t{ name: \"node_6\", state: 1, coord: [20, 35] },\n\t\t\t{ name: \"pivot\", state: 1, coord: [20, 40] },\n\t\t\t{ name: \"node_8\", state: -1, coord: [20, 50] },\n\t\t\t{ name: \"node_9\", state: 1, coord: [10, 60] },\n\t\t\t{ name: \"node_10\", state: 1, coord: [35, 50] },\n\t\t\t{ name: \"node_11\", state: -1, coord: [50, 50] },\n\t\t\t{ name: \"node_12\", state: 1, coord: [65, 50] },\n\t\t\t{ name: \"node_13\", state: -1, coord: [37, 63] },\n\t\t\t{ name: \"node_14\", state: 1, coord: [50, 40] },\n\t\t\t{ name: \"node_15\", state: -1, coord: [65, 65] },\n\t\t],\n\t\tsize: [90, 70],\n\t\tparams: [{ name: \"numberOfAgents\", value: 3250 }],\n\t\tname: \"NOT\",\n\t\tgroup: 2,\n\t},\n\t{\n\t\ttitle: \"NOT/NAND GATE\",\n\t\tnodes: [\n\t\t\t{ name: \"node_1\", state: 1, coord: [28, 6] },\n\t\t\t{ name: \"node_2\", state: -1, coord: [30, 20] },\n\t\t\t{ name: \"node_3\", state: 1, coord: [45, 20] },\n\t\t\t{ name: \"node_4\", state: -1, coord: [60, 20] },\n\t\t\t{ name: \"node_5\", state: -1, coord: [10, 20] },\n\t\t\t{ name: \"node_6\", state: 1, coord: [20, 35] },\n\t\t\t{ name: \"node_7\", state: -1, coord: [20, 50] },\n\t\t\t{ name: \"node_8\", state: 1, coord: [10, 60] },\n\t\t\t{ name: \"node_9\", state: 1, coord: [35, 50] },\n\t\t\t{ name: \"node_10\", state: -1, coord: [50, 50] },\n\t\t\t{ name: \"node_11\", state: 1, coord: [65, 50] },\n\t\t\t{ name: \"node_12\", state: -1, coord: [37, 63] },\n\t\t\t{ name: \"node_13\", state: 1, coord: [50, 40] },\n\t\t\t{ name: \"node_14\", state: -1, coord: [65, 65] },\n\t\t\t{ name: \"pivot\", state: 1, coord: [20, 40] },\n\t\t],\n\t\tsize: [90, 70],\n\t\tparams: [{ name: \"numberOfAgents\", value: 3250 }],\n\t\tevents: [\n\t\t\t{ type: \"parameter\", name: \"beta\", t: 1, value: 0.3 },\n\n\t\t\t{\n\t\t\t\ttype: \"node\",\n\t\t\t\tt: 1500,\n\t\t\t\tname: \"pivot\",\n\t\t\t\tstate: 1,\n\t\t\t\tcoord: [20, 40],\n\t\t\t},\n\t\t\t{ type: \"parameter\", name: \"beta\", t: 1500, value: 1 },\n\t\t\t{ type: \"parameter\", name: \"beta\", t: 1800, value: 0.3 },\n\t\t\t{\n\t\t\t\ttype: \"node\",\n\t\t\t\tt: 3000,\n\t\t\t\tname: \"pivot\",\n\t\t\t\tstate: 1,\n\t\t\t\tcoord: [25, 40],\n\t\t\t},\n\t\t\t{ type: \"parameter\", name: \"beta\", t: 3000, value: 1 },\n\t\t\t{ type: \"parameter\", name: \"beta\", t: 3300, value: 0.3 },\n\t\t],\n\t\tname: \"NOT/NAND\",\n\t\tgroup: 2,\n\t},\n];\n\nexport const customSwitch = (dist) => ({\n\tkey: \"Custom\",\n\tnodes: [\n\t\t{ name: \"node_1\", state: 1, coord: [15, 7] },\n\t\t{ name: \"node_2\", state: -1, coord: [15, 7 + +dist] },\n\t],\n\tsize: [30, 30],\n\tparams: [],\n});\n\nexport default layouts;\n\nconst backupNot = [\n\t{ name: \"node_1\", state: 1, coord: [30, 5] },\n\t{ name: \"node_2\", state: -1, coord: [30, 20] },\n\t{ name: \"node_3\", state: 1, coord: [45, 20] },\n\t{ name: \"node_4\", state: -1, coord: [60, 20] },\n\t{ name: \"node_5\", state: -1, coord: [10, 20] },\n\t{ name: \"node_6\", state: 1, coord: [20, 35] },\n\t{ name: \"node_8\", state: -1, coord: [35, 50] },\n\t{ name: \"node_9\", state: 1, coord: [25, 60] },\n\t{ name: \"node_10\", state: 1, coord: [50, 50] },\n\t{ name: \"node_11\", state: -1, coord: [65, 50] },\n\t{ name: \"node_12\", state: 1, coord: [80, 50] },\n\t{ name: \"node_13\", state: -1, coord: [50, 65] },\n\t{ name: \"node_14\", state: 1, coord: [65, 40] },\n\t{ name: \"node_15\", state: -1, coord: [80, 65] },\n\t{ name: \"pivot\", state: 1, coord: [25, 40] },\n];\n","import layouts, { customSwitch } from \"../layout\";\n\nexport function getEnvironment(query) {\n\tconst { alpha, beta, k, epsilon, s0 } = query;\n\treturn { alpha, beta, k, epsilon, s0, layout: {} };\n}\n\nexport function findPreset(layoutId, size) {\n\tconst preset = loadPreset(layoutId);\n\tpreset.size = sizeArray(size);\n\treturn preset;\n}\n\nfunction sizeArray(size) {\n\treturn size.split(\",\").map((el) => +el);\n}\n\nfunction loadPreset(layoutId) {\n\tconst preset = layouts.find(({ name }) => name === layoutId);\n\tif (preset === undefined) {\n\t\treturn customSwitch(layoutId);\n\t}\n\treturn preset;\n}\n\nexport function download(filename, text) {\n\tvar element = document.createElement(\"a\");\n\telement.setAttribute(\n\t\t\"href\",\n\t\t\"data:text/plain;charset=utf-8,\" + encodeURIComponent(text)\n\t);\n\telement.setAttribute(\"download\", filename);\n\telement.style.display = \"none\";\n\tdocument.body.appendChild(element);\n\telement.click();\n\tdocument.body.removeChild(element);\n}\n","import Environment from \"../Simulation/logic/environment/Environment\";\nimport Nodes from \"../Simulation/logic/nodes/Nodes\";\nimport Engine from \"../Simulation/logic/engine/Engine\";\nimport Analysis from \"../Simulation/logic/analysis/Analysis\";\nimport Database from \"../Simulation/logic/analysis/Database\";\nimport Controller from \"../Simulation/logic/controller/Controller\";\nimport WalkingSquad from \"../Simulation/logic/walkers/WalkingSquad\";\nimport { getEnvironment } from \"./properties\";\n\nself.addEventListener(\n\t\"message\",\n\tfunction (e) {\n\t\tvar data = e.data;\n\t\tswitch (data.fn) {\n\t\t\tcase \"start\":\n\t\t\t\tinit(data);\n\t\t\t\tbreak;\n\t\t\tdefault:\n\t\t\t\tself.postMessage(\"Unknown command: \" + data.msg);\n\t\t}\n\t},\n\tfalse\n);\n\nfunction sendBackData(data) {\n\tif (data.name === \"connectivity\") {\n\t\tself.postMessage({\n\t\t\tfn: \"update\",\n\t\t\tdata: [\n\t\t\t\tdata.value.time,\n\t\t\t\tdata.value.E,\n\t\t\t\tdata.value.version,\n\t\t\t\tdata.value.A,\n\t\t\t].flat(),\n\t\t});\n\t}\n}\n\nfunction init(data) {\n\tconst { frames, runs, query, preset } = data;\n\tconst nodes = new Nodes();\n\tnodes.default();\n\tconst envir = new Environment({\n\t\talpha: 1,\n\t\tk: 0.03,\n\t\tbeta: 0.2,\n\t\tepsilon: 0.5,\n\t\ts0: 10000,\n\t\tframerate: 1,\n\t\tlayout: {},\n\t\tnodes,\n\t\t...getEnvironment(query),\n\t});\n\tconst walkers = new WalkingSquad(\n\t\tquery.numberOfAgents,\n\t\tenvir,\n\t\t\"rand\",\n\t\t\"rand\",\n\t\t0\n\t);\n\n\tconst database = new Database(\"Walker Api Metrics\", sendBackData);\n\tconst analysis = new Analysis(envir, walkers, nodes, database);\n\tconst engine = new Engine(envir, walkers, \"euler\", database, analysis);\n\tconst controller = new Controller({\n\t\twalkers: walkers,\n\t\tanalysis: analysis,\n\t\tengine: engine,\n\t\tenv: envir,\n\t\tnodes,\n\t\tworker: true,\n\t});\n\tcontroller.setLayout(\n\t\tpreset.nodes,\n\t\tpreset.size,\n\t\t[],\n\t\tpreset.events,\n\t\tpreset.name\n\t);\n\n\trunSimulation(controller, frames, runs);\n\n\tself.postMessage({ fn: \"done\" });\n}\n\nfunction runSimulation(controller, frames, runs) {\n\tcontroller.toggleEngine(true);\n\n\tfor (let run = 0; run < runs; run++) {\n\t\tfor (let frame = 0; frame < frames; frame++) {\n\t\t\tcontroller.engine.next();\n\t\t\tcontroller.analysis.run();\n\t\t}\n\t\tcontroller.engine.restart();\n\t\tcontroller.analysis.clear();\n\t}\n}\n"],"names":["generateField","size","fill","Array","map","el","isArray","slice","isNaN","generateInitialFields","buffer","prototype","indexOfRand","value","indexArray","array","this","indexOf","push","length","Math","floor","random","uuid","replace","c","r","toString","Environment","alpha","beta","k","nodes","list","name","state","coord","layout","lattice","position","epsilon","s0","framerate","hitBox","freeze","timeSinceStart","fields","positive","negative","fieldsDt","fieldsDx","nodesCenter","undefined","nodeColor","default","allowedSteps","init","Nodes","addRandom","bind","getEmission","t","exp","setStartingState","apply","func","forEach","x","y","setStartingPosition","setPosition","includes","assignState","walker","latx","laty","node","timeSinceCollision","makeNodesCenter","filter","reset","resetFields","resetFieldsDt","resetFieldsDx","clearFields","noiseStep","angle","PI","eps","sqrt","cos","sin","discreteStep","step","scalarProduct","mvt","maxScalarProduct","max","stepIndex","clear","layoutId","add","toggle","remove","assign","props","maxX","maxY","Euler","env","walkers","timeMap","Engine","engine","database","analysis","running","toLowerCase","setup","counter","BurningTree","matrix","campfires","rows","cols","forest","maxPathLength","A","edges","connect","Connectivity","connectivityThreshold","adjencyMatrix","hoshenKopelman","Analysis","events","version","sessions","combinedField","maxima","min","maxMinThreshold","interval","displayOptions","showWalkers","showNodes","showCombinedFields","showPositiveField","showNegativeField","defaultColor","positiveColor","negativeColor","combinedColor","fineGrain","connectivity","Database","callback","Loop","id","defaultCallback","setId","minInt","maxFrames","frame","start","request","window","requestAnimationFrame","Controller","worker","loop","loopCallback","slowMo","updates","ui","game","back","setRequestId","useCallback","useRedraw","toggleEngine","setContrast","setParams","setLayout","Walker","dr","pathColor","WalkingSquad","numberOfAgents","environment","squad","createSquad","run","computeFieldsDx","computeFieldsDt","computeWalkersDr","computeEulerFields","computeEulerWalkers","getPosition","inputFrame","outputFrame","fieldStep","fieldState","fieldWalkerStep","fieldNoiseRatio","arr1","arr2","addResidues","addEmissions","newTime","x_minus","x_plus","y_minus","y_plus","restart","console","log","next","saveMetrics","resetDr","stop","campfire","burnForest","obj","JSON","parse","stringify","stack","explore","camp","xtar","ytar","getNeighbors","shift","checkCampfire","neighbor","diag","up","left","right","down","filterUsingThreshold","i","j","filteredField","time","burningTree","nbrEdges","row","reduce","a","b","E","combineFields","computeMaxima","flat","checkEvents","edge","event","applyEvent","type","save","round","startTime","performance","now","getEnv","setEnv","setPopulation","getLayers","val","setLayers","useSlowMo","contrast","params","key","setEvents","setDefaultParams","param","reqId","data","redraw","setupLoop","setupRedraw","stopLoop","cancelAnimationFrame","startLoop","population","createWalker","newX","newY","removeWalker","count","number","addWalker","Number","isInteger","popDiff","resetPath","xpath","ypath","col","getEnvironment","query","sendBackData","self","postMessage","fn","addEventListener","e","frames","runs","preset","envir","controller","runSimulation","msg"],"mappings":"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"}